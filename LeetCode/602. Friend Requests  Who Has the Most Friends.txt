#Write your MySQL query statement below

# Count number of request for every single people
WITH request AS
(
  SELECT requester_id AS id , COUNT(requester_id) AS re
  FROM RequestAccepted
  GROUP BY requester_id
),

# Count number of accepte for every single people
accepte AS
(
  SELECT accepter_id  AS id , COUNT(accepter_id ) AS re
  FROM RequestAccepted
  GROUP BY accepter_id 
),

# Marge two table and calculate total friends for every single people
Full_table AS
(
  SELECT r.id, CASE WHEN a.re IS NULL THEN r.re ELSE r.re+a.re END AS num
  FROM request AS r
  LEFT JOIN accepte AS a
  ON r.id = a.id

  UNION 

  SELECT a.id, CASE WHEN r.re IS NULL THEN a.re ELSE a.re+r.re END AS num
  FROM accepte AS a
  LEFT JOIN request AS r
  ON a.id = r.id
)

# Finally  find the people who have the most friends and the most friends number.
SELECT id, num
FROM Full_table
WHERE num = (SELECT MAX(num) FROM Full_table)




################################################################
# ANother way

# Marge all (requester_id | accepter_id ) pair
WITH cte AS
(
  SELECT requester_id AS id, accepter_id AS num
  FROM RequestAccepted

  UNION 

  SELECT accepter_id AS id, requester_id AS num
  FROM RequestAccepted
)

# Group the cte table by id AND show only one person has the most friends using (ORDER BY num DESC LIMIT 1) expression
SELECT id, COUNT(DISTINCT num) AS num
FROM cte
GROUP BY id
ORDER BY num DESC
LIMIT 1